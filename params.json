{"name":"Story-client","tagline":"","body":"# A Lineman JS Template using AngularJS\r\n\r\n\r\nThis project can be used as a template for Angular JS applications using [Lineman](http://www.linemanjs.com).\r\n\r\n\r\n# Instructions\r\n\r\n1. `git clone https://github.com/manuel-palacio/story-client`\r\n2. `cd my-lineman-app`\r\n3. `sudo npm install -g lineman`\r\n4. `npm install`\r\n5. `lineman run`\r\n6. open your web browser to localhost:8000\r\n\r\n# Running Tests\r\n\r\nTo run the unit tests:\r\n\r\n1. `lineman run` from 1 terminal window\r\n2. `lineman spec` from another terminal window, this will launch Testem and execute specs in Chrome\r\n\r\n\r\n# Defining your apps angular.module in CoffeeScript\r\n\r\nIf you are using Coffeescript to define the angular.module for your app, you will need to swap the concat order in `config/application.js` such that coffeescript files are included _before_ javascript, here's a sample config. (If you are using JavaScript for defining the angular.module the default concat order is fine).\r\n\r\n```javascript\r\njs: {\r\n  // if using coffeescript and your angular.module is defined in a .coffee file, files.coffee.generated comes first\r\n  src: [\"<%= files.js.vendor %>\", \"<%= files.coffee.generated %>\", \"<%= files.js.app %>\", \"<%= files.ngtemplates.dest %>\"],\r\n  dest: \"<%= files.js.concatenated %>\"\r\n},\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}